<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="GradingSystemDataSet" targetNamespace="http://tempuri.org/GradingSystemDataSet.xsd" xmlns:mstns="http://tempuri.org/GradingSystemDataSet.xsd" xmlns="http://tempuri.org/GradingSystemDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="GradingSystemConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="GradingSystemConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.GradingSystemProject.Properties.Settings.GlobalReference.Default.GradingSystemConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AccountTableAdapter" GeneratorDataComponentClassName="AccountTableAdapter" Name="Account" UserDataComponentName="AccountTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GradingSystemConnectionString (Settings)" DbObjectName="GradingSystem.dbo.Account" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Account] WHERE (([AccountID] = @Original_AccountID) AND ([AccountUserName] = @Original_AccountUserName) AND ([AccountPassword] = @Original_AccountPassword) AND ([AccountRole] = @Original_AccountRole))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AccountUserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccountUserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AccountPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccountPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AccountRole" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccountRole" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Account] ([AccountUserName], [AccountPassword], [AccountRole]) VALUES (@AccountUserName, @AccountPassword, @AccountRole);
SELECT AccountID, AccountUserName, AccountPassword, AccountRole FROM Account WHERE (AccountID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AccountUserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccountUserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AccountPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccountPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AccountRole" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccountRole" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AccountID, AccountUserName, AccountPassword, AccountRole FROM dbo.Account</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Account] SET [AccountUserName] = @AccountUserName, [AccountPassword] = @AccountPassword, [AccountRole] = @AccountRole WHERE (([AccountID] = @Original_AccountID) AND ([AccountUserName] = @Original_AccountUserName) AND ([AccountPassword] = @Original_AccountPassword) AND ([AccountRole] = @Original_AccountRole));
SELECT AccountID, AccountUserName, AccountPassword, AccountRole FROM Account WHERE (AccountID = @AccountID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AccountUserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccountUserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AccountPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccountPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AccountRole" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccountRole" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AccountUserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccountUserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AccountPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccountPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AccountRole" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccountRole" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountID" ColumnName="AccountID" DataSourceName="GradingSystem.dbo.Account" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountID" DataSetColumn="AccountID" />
              <Mapping SourceColumn="AccountUserName" DataSetColumn="AccountUserName" />
              <Mapping SourceColumn="AccountPassword" DataSetColumn="AccountPassword" />
              <Mapping SourceColumn="AccountRole" DataSetColumn="AccountRole" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ClassTableAdapter" GeneratorDataComponentClassName="ClassTableAdapter" Name="Class" UserDataComponentName="ClassTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GradingSystemConnectionString (Settings)" DbObjectName="GradingSystem.dbo.Class" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Class] WHERE (([ClassID] = @Original_ClassID) AND ([ClassName] = @Original_ClassName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ClassID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ClassName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Class] ([ClassName]) VALUES (@ClassName);
SELECT ClassID, ClassName FROM Class WHERE (ClassID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ClassName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ClassID, ClassName FROM dbo.Class</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Class] SET [ClassName] = @ClassName WHERE (([ClassID] = @Original_ClassID) AND ([ClassName] = @Original_ClassName));
SELECT ClassID, ClassName FROM Class WHERE (ClassID = @ClassID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ClassName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ClassID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ClassName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ClassID" ColumnName="ClassID" DataSourceName="GradingSystem.dbo.Class" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ClassID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ClassID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ClassID" DataSetColumn="ClassID" />
              <Mapping SourceColumn="ClassName" DataSetColumn="ClassName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CourseTableAdapter" GeneratorDataComponentClassName="CourseTableAdapter" Name="Course" UserDataComponentName="CourseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GradingSystemConnectionString (Settings)" DbObjectName="GradingSystem.dbo.Course" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Course] WHERE (([CourseID] = @Original_CourseID) AND ([CourseName] = @Original_CourseName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CourseName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Course] ([CourseName]) VALUES (@CourseName);
SELECT CourseID, CourseName FROM Course WHERE (CourseID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CourseName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CourseID, CourseName FROM dbo.Course</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Course] SET [CourseName] = @CourseName WHERE (([CourseID] = @Original_CourseID) AND ([CourseName] = @Original_CourseName));
SELECT CourseID, CourseName FROM Course WHERE (CourseID = @CourseID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CourseName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CourseName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="CourseID" ColumnName="CourseID" DataSourceName="GradingSystem.dbo.Course" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CourseID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CourseID" DataSetColumn="CourseID" />
              <Mapping SourceColumn="CourseName" DataSetColumn="CourseName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GradeTableAdapter" GeneratorDataComponentClassName="GradeTableAdapter" Name="Grade" UserDataComponentName="GradeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GradingSystemConnectionString (Settings)" DbObjectName="GradingSystem.dbo.Grade" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Grade] WHERE (([GradeStudentID] = @Original_GradeStudentID) AND ([GradeCourseID] = @Original_GradeCourseID) AND ((@IsNull_AttendanceGrade = 1 AND [AttendanceGrade] IS NULL) OR ([AttendanceGrade] = @Original_AttendanceGrade)) AND ((@IsNull_ProjectGrade = 1 AND [ProjectGrade] IS NULL) OR ([ProjectGrade] = @Original_ProjectGrade)) AND ((@IsNull_WrittenGrade = 1 AND [WrittenGrade] IS NULL) OR ([WrittenGrade] = @Original_WrittenGrade)) AND ((@IsNull_PracticalExamGrade = 1 AND [PracticalExamGrade] IS NULL) OR ([PracticalExamGrade] = @Original_PracticalExamGrade)) AND ((@IsNull_FinalExamGrade = 1 AND [FinalExamGrade] IS NULL) OR ([FinalExamGrade] = @Original_FinalExamGrade)) AND ((@IsNull_AverageGrade = 1 AND [AverageGrade] IS NULL) OR ([AverageGrade] = @Original_AverageGrade)) AND ((@IsNull_ResultText = 1 AND [ResultText] IS NULL) OR ([ResultText] = @Original_ResultText)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GradeStudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GradeStudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GradeCourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GradeCourseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_AttendanceGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AttendanceGrade" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AttendanceGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AttendanceGrade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ProjectGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProjectGrade" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ProjectGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProjectGrade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_WrittenGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WrittenGrade" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WrittenGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WrittenGrade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_PracticalExamGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PracticalExamGrade" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PracticalExamGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PracticalExamGrade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_FinalExamGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FinalExamGrade" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_FinalExamGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FinalExamGrade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_AverageGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AverageGrade" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AverageGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AverageGrade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ResultText" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ResultText" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ResultText" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ResultText" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Grade] ([GradeStudentID], [GradeCourseID], [AttendanceGrade], [ProjectGrade], [WrittenGrade], [PracticalExamGrade], [FinalExamGrade], [AverageGrade], [ResultText]) VALUES (@GradeStudentID, @GradeCourseID, @AttendanceGrade, @ProjectGrade, @WrittenGrade, @PracticalExamGrade, @FinalExamGrade, @AverageGrade, @ResultText);
SELECT GradeStudentID, GradeCourseID, AttendanceGrade, ProjectGrade, WrittenGrade, PracticalExamGrade, FinalExamGrade, AverageGrade, ResultText FROM Grade WHERE (GradeCourseID = @GradeCourseID) AND (GradeStudentID = @GradeStudentID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GradeStudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GradeStudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GradeCourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GradeCourseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AttendanceGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AttendanceGrade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ProjectGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProjectGrade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WrittenGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WrittenGrade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PracticalExamGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PracticalExamGrade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@FinalExamGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FinalExamGrade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AverageGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AverageGrade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ResultText" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ResultText" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GradeStudentID, GradeCourseID, AttendanceGrade, ProjectGrade, WrittenGrade, PracticalExamGrade, FinalExamGrade, AverageGrade, ResultText FROM dbo.Grade</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Grade] SET [GradeStudentID] = @GradeStudentID, [GradeCourseID] = @GradeCourseID, [AttendanceGrade] = @AttendanceGrade, [ProjectGrade] = @ProjectGrade, [WrittenGrade] = @WrittenGrade, [PracticalExamGrade] = @PracticalExamGrade, [FinalExamGrade] = @FinalExamGrade, [AverageGrade] = @AverageGrade, [ResultText] = @ResultText WHERE (([GradeStudentID] = @Original_GradeStudentID) AND ([GradeCourseID] = @Original_GradeCourseID) AND ((@IsNull_AttendanceGrade = 1 AND [AttendanceGrade] IS NULL) OR ([AttendanceGrade] = @Original_AttendanceGrade)) AND ((@IsNull_ProjectGrade = 1 AND [ProjectGrade] IS NULL) OR ([ProjectGrade] = @Original_ProjectGrade)) AND ((@IsNull_WrittenGrade = 1 AND [WrittenGrade] IS NULL) OR ([WrittenGrade] = @Original_WrittenGrade)) AND ((@IsNull_PracticalExamGrade = 1 AND [PracticalExamGrade] IS NULL) OR ([PracticalExamGrade] = @Original_PracticalExamGrade)) AND ((@IsNull_FinalExamGrade = 1 AND [FinalExamGrade] IS NULL) OR ([FinalExamGrade] = @Original_FinalExamGrade)) AND ((@IsNull_AverageGrade = 1 AND [AverageGrade] IS NULL) OR ([AverageGrade] = @Original_AverageGrade)) AND ((@IsNull_ResultText = 1 AND [ResultText] IS NULL) OR ([ResultText] = @Original_ResultText)));
SELECT GradeStudentID, GradeCourseID, AttendanceGrade, ProjectGrade, WrittenGrade, PracticalExamGrade, FinalExamGrade, AverageGrade, ResultText FROM Grade WHERE (GradeCourseID = @GradeCourseID) AND (GradeStudentID = @GradeStudentID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GradeStudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GradeStudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GradeCourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GradeCourseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AttendanceGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AttendanceGrade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ProjectGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProjectGrade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WrittenGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WrittenGrade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PracticalExamGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PracticalExamGrade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@FinalExamGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FinalExamGrade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AverageGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AverageGrade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ResultText" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ResultText" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GradeStudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GradeStudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GradeCourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GradeCourseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_AttendanceGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AttendanceGrade" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AttendanceGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AttendanceGrade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ProjectGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProjectGrade" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ProjectGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProjectGrade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_WrittenGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WrittenGrade" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WrittenGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WrittenGrade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_PracticalExamGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PracticalExamGrade" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PracticalExamGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PracticalExamGrade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_FinalExamGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FinalExamGrade" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_FinalExamGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FinalExamGrade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_AverageGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AverageGrade" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AverageGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AverageGrade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ResultText" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ResultText" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ResultText" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ResultText" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GradeStudentID" DataSetColumn="GradeStudentID" />
              <Mapping SourceColumn="GradeCourseID" DataSetColumn="GradeCourseID" />
              <Mapping SourceColumn="AttendanceGrade" DataSetColumn="AttendanceGrade" />
              <Mapping SourceColumn="ProjectGrade" DataSetColumn="ProjectGrade" />
              <Mapping SourceColumn="WrittenGrade" DataSetColumn="WrittenGrade" />
              <Mapping SourceColumn="PracticalExamGrade" DataSetColumn="PracticalExamGrade" />
              <Mapping SourceColumn="FinalExamGrade" DataSetColumn="FinalExamGrade" />
              <Mapping SourceColumn="AverageGrade" DataSetColumn="AverageGrade" />
              <Mapping SourceColumn="ResultText" DataSetColumn="ResultText" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentTableAdapter" GeneratorDataComponentClassName="StudentTableAdapter" Name="Student" UserDataComponentName="StudentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GradingSystemConnectionString (Settings)" DbObjectName="GradingSystem.dbo.Student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Student] WHERE (([StudentID] = @Original_StudentID) AND ([StudentClassID] = @Original_StudentClassID) AND ([StudentAccountID] = @Original_StudentAccountID) AND ([StudentName] = @Original_StudentName) AND ((@IsNull_StudentPhoneNumber = 1 AND [StudentPhoneNumber] IS NULL) OR ([StudentPhoneNumber] = @Original_StudentPhoneNumber)) AND ((@IsNull_StudentMail = 1 AND [StudentMail] IS NULL) OR ([StudentMail] = @Original_StudentMail)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentClassID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentClassID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentAccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentAccountID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_StudentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="StudentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_StudentPhoneNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentPhoneNumber" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StudentPhoneNumber" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentPhoneNumber" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_StudentMail" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentMail" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StudentMail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentMail" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Student] ([StudentClassID], [StudentAccountID], [StudentName], [StudentPhoneNumber], [StudentMail]) VALUES (@StudentClassID, @StudentAccountID, @StudentName, @StudentPhoneNumber, @StudentMail);
SELECT StudentID, StudentClassID, StudentAccountID, StudentName, StudentPhoneNumber, StudentMail FROM Student WHERE (StudentID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentClassID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentClassID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentAccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentAccountID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@StudentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="StudentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StudentPhoneNumber" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentPhoneNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StudentMail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentMail" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudentID, StudentClassID, StudentAccountID, StudentName, StudentPhoneNumber, StudentMail FROM dbo.Student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Student] SET [StudentClassID] = @StudentClassID, [StudentAccountID] = @StudentAccountID, [StudentName] = @StudentName, [StudentPhoneNumber] = @StudentPhoneNumber, [StudentMail] = @StudentMail WHERE (([StudentID] = @Original_StudentID) AND ([StudentClassID] = @Original_StudentClassID) AND ([StudentAccountID] = @Original_StudentAccountID) AND ([StudentName] = @Original_StudentName) AND ((@IsNull_StudentPhoneNumber = 1 AND [StudentPhoneNumber] IS NULL) OR ([StudentPhoneNumber] = @Original_StudentPhoneNumber)) AND ((@IsNull_StudentMail = 1 AND [StudentMail] IS NULL) OR ([StudentMail] = @Original_StudentMail)));
SELECT StudentID, StudentClassID, StudentAccountID, StudentName, StudentPhoneNumber, StudentMail FROM Student WHERE (StudentID = @StudentID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentClassID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentClassID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentAccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentAccountID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@StudentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="StudentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StudentPhoneNumber" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentPhoneNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StudentMail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentMail" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentClassID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentClassID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentAccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentAccountID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_StudentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="StudentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_StudentPhoneNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentPhoneNumber" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StudentPhoneNumber" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentPhoneNumber" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_StudentMail" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentMail" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StudentMail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentMail" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="StudentID" ColumnName="StudentID" DataSourceName="GradingSystem.dbo.Student" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@StudentID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StudentID" DataSetColumn="StudentID" />
              <Mapping SourceColumn="StudentClassID" DataSetColumn="StudentClassID" />
              <Mapping SourceColumn="StudentAccountID" DataSetColumn="StudentAccountID" />
              <Mapping SourceColumn="StudentName" DataSetColumn="StudentName" />
              <Mapping SourceColumn="StudentPhoneNumber" DataSetColumn="StudentPhoneNumber" />
              <Mapping SourceColumn="StudentMail" DataSetColumn="StudentMail" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TeacherTableAdapter" GeneratorDataComponentClassName="TeacherTableAdapter" Name="Teacher" UserDataComponentName="TeacherTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GradingSystemConnectionString (Settings)" DbObjectName="GradingSystem.dbo.Teacher" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Teacher] WHERE (([TeacherID] = @Original_TeacherID) AND ([TeacherAccountID] = @Original_TeacherAccountID) AND ([TeacherName] = @Original_TeacherName) AND ((@IsNull_TeacherPhoneNumber = 1 AND [TeacherPhoneNumber] IS NULL) OR ([TeacherPhoneNumber] = @Original_TeacherPhoneNumber)) AND ((@IsNull_TeacherMail = 1 AND [TeacherMail] IS NULL) OR ([TeacherMail] = @Original_TeacherMail)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherAccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherAccountID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TeacherName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TeacherPhoneNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherPhoneNumber" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TeacherPhoneNumber" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TeacherPhoneNumber" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TeacherMail" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherMail" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TeacherMail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TeacherMail" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Teacher] ([TeacherAccountID], [TeacherName], [TeacherPhoneNumber], [TeacherMail]) VALUES (@TeacherAccountID, @TeacherName, @TeacherPhoneNumber, @TeacherMail);
SELECT TeacherID, TeacherAccountID, TeacherName, TeacherPhoneNumber, TeacherMail FROM Teacher WHERE (TeacherID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeacherAccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherAccountID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TeacherName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TeacherPhoneNumber" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TeacherPhoneNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TeacherMail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TeacherMail" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TeacherID, TeacherAccountID, TeacherName, TeacherPhoneNumber, TeacherMail FROM dbo.Teacher</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Teacher] SET [TeacherAccountID] = @TeacherAccountID, [TeacherName] = @TeacherName, [TeacherPhoneNumber] = @TeacherPhoneNumber, [TeacherMail] = @TeacherMail WHERE (([TeacherID] = @Original_TeacherID) AND ([TeacherAccountID] = @Original_TeacherAccountID) AND ([TeacherName] = @Original_TeacherName) AND ((@IsNull_TeacherPhoneNumber = 1 AND [TeacherPhoneNumber] IS NULL) OR ([TeacherPhoneNumber] = @Original_TeacherPhoneNumber)) AND ((@IsNull_TeacherMail = 1 AND [TeacherMail] IS NULL) OR ([TeacherMail] = @Original_TeacherMail)));
SELECT TeacherID, TeacherAccountID, TeacherName, TeacherPhoneNumber, TeacherMail FROM Teacher WHERE (TeacherID = @TeacherID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeacherAccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherAccountID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TeacherName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TeacherPhoneNumber" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TeacherPhoneNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TeacherMail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TeacherMail" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherAccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherAccountID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TeacherName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TeacherPhoneNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherPhoneNumber" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TeacherPhoneNumber" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TeacherPhoneNumber" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TeacherMail" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherMail" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TeacherMail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TeacherMail" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TeacherID" ColumnName="TeacherID" DataSourceName="GradingSystem.dbo.Teacher" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TeacherID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TeacherID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TeacherID" DataSetColumn="TeacherID" />
              <Mapping SourceColumn="TeacherAccountID" DataSetColumn="TeacherAccountID" />
              <Mapping SourceColumn="TeacherName" DataSetColumn="TeacherName" />
              <Mapping SourceColumn="TeacherPhoneNumber" DataSetColumn="TeacherPhoneNumber" />
              <Mapping SourceColumn="TeacherMail" DataSetColumn="TeacherMail" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TeachingTableAdapter" GeneratorDataComponentClassName="TeachingTableAdapter" Name="Teaching" UserDataComponentName="TeachingTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GradingSystemConnectionString (Settings)" DbObjectName="GradingSystem.dbo.Teaching" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Teaching] WHERE (([TeachingTeacherID] = @Original_TeachingTeacherID) AND ([TeachingCourseID] = @Original_TeachingCourseID) AND ([TeachingClassID] = @Original_TeachingClassID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeachingTeacherID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeachingTeacherID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeachingCourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeachingCourseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeachingClassID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeachingClassID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Teaching] ([TeachingTeacherID], [TeachingCourseID], [TeachingClassID]) VALUES (@TeachingTeacherID, @TeachingCourseID, @TeachingClassID);
SELECT TeachingTeacherID, TeachingCourseID, TeachingClassID FROM Teaching WHERE (TeachingClassID = @TeachingClassID) AND (TeachingCourseID = @TeachingCourseID) AND (TeachingTeacherID = @TeachingTeacherID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeachingTeacherID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeachingTeacherID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeachingCourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeachingCourseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeachingClassID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeachingClassID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TeachingTeacherID, TeachingCourseID, TeachingClassID FROM dbo.Teaching</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Teaching] SET [TeachingTeacherID] = @TeachingTeacherID, [TeachingCourseID] = @TeachingCourseID, [TeachingClassID] = @TeachingClassID WHERE (([TeachingTeacherID] = @Original_TeachingTeacherID) AND ([TeachingCourseID] = @Original_TeachingCourseID) AND ([TeachingClassID] = @Original_TeachingClassID));
SELECT TeachingTeacherID, TeachingCourseID, TeachingClassID FROM Teaching WHERE (TeachingClassID = @TeachingClassID) AND (TeachingCourseID = @TeachingCourseID) AND (TeachingTeacherID = @TeachingTeacherID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeachingTeacherID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeachingTeacherID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeachingCourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeachingCourseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeachingClassID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeachingClassID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeachingTeacherID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeachingTeacherID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeachingCourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeachingCourseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeachingClassID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeachingClassID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TeachingTeacherID" DataSetColumn="TeachingTeacherID" />
              <Mapping SourceColumn="TeachingCourseID" DataSetColumn="TeachingCourseID" />
              <Mapping SourceColumn="TeachingClassID" DataSetColumn="TeachingClassID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CourseGradeReportTableAdapter" GeneratorDataComponentClassName="CourseGradeReportTableAdapter" Name="CourseGradeReport" UserDataComponentName="CourseGradeReportTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GradingSystemConnectionString (Settings)" DbObjectName="GradingSystem.dbo.CourseGradeReport" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GradeStudentID, CourseName, AttendanceGrade, ProjectGrade, WrittenGrade, PracticalExamGrade, FinalExamGrade, AverageGrade, ResultText FROM dbo.CourseGradeReport</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GradeStudentID" DataSetColumn="GradeStudentID" />
              <Mapping SourceColumn="CourseName" DataSetColumn="CourseName" />
              <Mapping SourceColumn="AttendanceGrade" DataSetColumn="AttendanceGrade" />
              <Mapping SourceColumn="ProjectGrade" DataSetColumn="ProjectGrade" />
              <Mapping SourceColumn="WrittenGrade" DataSetColumn="WrittenGrade" />
              <Mapping SourceColumn="PracticalExamGrade" DataSetColumn="PracticalExamGrade" />
              <Mapping SourceColumn="FinalExamGrade" DataSetColumn="FinalExamGrade" />
              <Mapping SourceColumn="AverageGrade" DataSetColumn="AverageGrade" />
              <Mapping SourceColumn="ResultText" DataSetColumn="ResultText" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="GradingSystemDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="GradingSystemDataSet" msprop:Generator_UserDSName="GradingSystemDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Account" msprop:Generator_TableClassName="AccountDataTable" msprop:Generator_TableVarName="tableAccount" msprop:Generator_TablePropName="Account" msprop:Generator_RowDeletingName="AccountRowDeleting" msprop:Generator_RowChangingName="AccountRowChanging" msprop:Generator_RowEvHandlerName="AccountRowChangeEventHandler" msprop:Generator_RowDeletedName="AccountRowDeleted" msprop:Generator_UserTableName="Account" msprop:Generator_RowChangedName="AccountRowChanged" msprop:Generator_RowEvArgName="AccountRowChangeEvent" msprop:Generator_RowClassName="AccountRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnAccountID" msprop:Generator_ColumnPropNameInRow="AccountID" msprop:Generator_ColumnPropNameInTable="AccountIDColumn" msprop:Generator_UserColumnName="AccountID" type="xs:int" />
              <xs:element name="AccountUserName" msprop:Generator_ColumnVarNameInTable="columnAccountUserName" msprop:Generator_ColumnPropNameInRow="AccountUserName" msprop:Generator_ColumnPropNameInTable="AccountUserNameColumn" msprop:Generator_UserColumnName="AccountUserName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AccountPassword" msprop:Generator_ColumnVarNameInTable="columnAccountPassword" msprop:Generator_ColumnPropNameInRow="AccountPassword" msprop:Generator_ColumnPropNameInTable="AccountPasswordColumn" msprop:Generator_UserColumnName="AccountPassword">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AccountRole" msprop:Generator_ColumnVarNameInTable="columnAccountRole" msprop:Generator_ColumnPropNameInRow="AccountRole" msprop:Generator_ColumnPropNameInTable="AccountRoleColumn" msprop:Generator_UserColumnName="AccountRole">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Class" msprop:Generator_TableClassName="ClassDataTable" msprop:Generator_TableVarName="tableClass" msprop:Generator_TablePropName="Class" msprop:Generator_RowDeletingName="ClassRowDeleting" msprop:Generator_RowChangingName="ClassRowChanging" msprop:Generator_RowEvHandlerName="ClassRowChangeEventHandler" msprop:Generator_RowDeletedName="ClassRowDeleted" msprop:Generator_UserTableName="Class" msprop:Generator_RowChangedName="ClassRowChanged" msprop:Generator_RowEvArgName="ClassRowChangeEvent" msprop:Generator_RowClassName="ClassRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ClassID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnClassID" msprop:Generator_ColumnPropNameInRow="ClassID" msprop:Generator_ColumnPropNameInTable="ClassIDColumn" msprop:Generator_UserColumnName="ClassID" type="xs:int" />
              <xs:element name="ClassName" msprop:Generator_ColumnVarNameInTable="columnClassName" msprop:Generator_ColumnPropNameInRow="ClassName" msprop:Generator_ColumnPropNameInTable="ClassNameColumn" msprop:Generator_UserColumnName="ClassName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Course" msprop:Generator_TableClassName="CourseDataTable" msprop:Generator_TableVarName="tableCourse" msprop:Generator_TablePropName="Course" msprop:Generator_RowDeletingName="CourseRowDeleting" msprop:Generator_RowChangingName="CourseRowChanging" msprop:Generator_RowEvHandlerName="CourseRowChangeEventHandler" msprop:Generator_RowDeletedName="CourseRowDeleted" msprop:Generator_UserTableName="Course" msprop:Generator_RowChangedName="CourseRowChanged" msprop:Generator_RowEvArgName="CourseRowChangeEvent" msprop:Generator_RowClassName="CourseRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CourseID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnCourseID" msprop:Generator_ColumnPropNameInRow="CourseID" msprop:Generator_ColumnPropNameInTable="CourseIDColumn" msprop:Generator_UserColumnName="CourseID" type="xs:int" />
              <xs:element name="CourseName" msprop:Generator_ColumnVarNameInTable="columnCourseName" msprop:Generator_ColumnPropNameInRow="CourseName" msprop:Generator_ColumnPropNameInTable="CourseNameColumn" msprop:Generator_UserColumnName="CourseName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Grade" msprop:Generator_TableClassName="GradeDataTable" msprop:Generator_TableVarName="tableGrade" msprop:Generator_TablePropName="Grade" msprop:Generator_RowDeletingName="GradeRowDeleting" msprop:Generator_RowChangingName="GradeRowChanging" msprop:Generator_RowEvHandlerName="GradeRowChangeEventHandler" msprop:Generator_RowDeletedName="GradeRowDeleted" msprop:Generator_UserTableName="Grade" msprop:Generator_RowChangedName="GradeRowChanged" msprop:Generator_RowEvArgName="GradeRowChangeEvent" msprop:Generator_RowClassName="GradeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GradeStudentID" msprop:Generator_ColumnVarNameInTable="columnGradeStudentID" msprop:Generator_ColumnPropNameInRow="GradeStudentID" msprop:Generator_ColumnPropNameInTable="GradeStudentIDColumn" msprop:Generator_UserColumnName="GradeStudentID" type="xs:int" />
              <xs:element name="GradeCourseID" msprop:Generator_ColumnVarNameInTable="columnGradeCourseID" msprop:Generator_ColumnPropNameInRow="GradeCourseID" msprop:Generator_ColumnPropNameInTable="GradeCourseIDColumn" msprop:Generator_UserColumnName="GradeCourseID" type="xs:int" />
              <xs:element name="AttendanceGrade" msprop:Generator_ColumnVarNameInTable="columnAttendanceGrade" msprop:Generator_ColumnPropNameInRow="AttendanceGrade" msprop:Generator_ColumnPropNameInTable="AttendanceGradeColumn" msprop:Generator_UserColumnName="AttendanceGrade" type="xs:int" minOccurs="0" />
              <xs:element name="ProjectGrade" msprop:Generator_ColumnVarNameInTable="columnProjectGrade" msprop:Generator_ColumnPropNameInRow="ProjectGrade" msprop:Generator_ColumnPropNameInTable="ProjectGradeColumn" msprop:Generator_UserColumnName="ProjectGrade" type="xs:int" minOccurs="0" />
              <xs:element name="WrittenGrade" msprop:Generator_ColumnVarNameInTable="columnWrittenGrade" msprop:Generator_ColumnPropNameInRow="WrittenGrade" msprop:Generator_ColumnPropNameInTable="WrittenGradeColumn" msprop:Generator_UserColumnName="WrittenGrade" type="xs:int" minOccurs="0" />
              <xs:element name="PracticalExamGrade" msprop:Generator_ColumnVarNameInTable="columnPracticalExamGrade" msprop:Generator_ColumnPropNameInRow="PracticalExamGrade" msprop:Generator_ColumnPropNameInTable="PracticalExamGradeColumn" msprop:Generator_UserColumnName="PracticalExamGrade" type="xs:int" minOccurs="0" />
              <xs:element name="FinalExamGrade" msprop:Generator_ColumnVarNameInTable="columnFinalExamGrade" msprop:Generator_ColumnPropNameInRow="FinalExamGrade" msprop:Generator_ColumnPropNameInTable="FinalExamGradeColumn" msprop:Generator_UserColumnName="FinalExamGrade" type="xs:int" minOccurs="0" />
              <xs:element name="AverageGrade" msprop:Generator_ColumnVarNameInTable="columnAverageGrade" msprop:Generator_ColumnPropNameInRow="AverageGrade" msprop:Generator_ColumnPropNameInTable="AverageGradeColumn" msprop:Generator_UserColumnName="AverageGrade" type="xs:int" minOccurs="0" />
              <xs:element name="ResultText" msprop:Generator_ColumnVarNameInTable="columnResultText" msprop:Generator_ColumnPropNameInRow="ResultText" msprop:Generator_ColumnPropNameInTable="ResultTextColumn" msprop:Generator_UserColumnName="ResultText" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Student" msprop:Generator_TableClassName="StudentDataTable" msprop:Generator_TableVarName="tableStudent" msprop:Generator_TablePropName="Student" msprop:Generator_RowDeletingName="StudentRowDeleting" msprop:Generator_RowChangingName="StudentRowChanging" msprop:Generator_RowEvHandlerName="StudentRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentRowDeleted" msprop:Generator_UserTableName="Student" msprop:Generator_RowChangedName="StudentRowChanged" msprop:Generator_RowEvArgName="StudentRowChangeEvent" msprop:Generator_RowClassName="StudentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StudentID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnStudentID" msprop:Generator_ColumnPropNameInRow="StudentID" msprop:Generator_ColumnPropNameInTable="StudentIDColumn" msprop:Generator_UserColumnName="StudentID" type="xs:int" />
              <xs:element name="StudentClassID" msprop:Generator_ColumnVarNameInTable="columnStudentClassID" msprop:Generator_ColumnPropNameInRow="StudentClassID" msprop:Generator_ColumnPropNameInTable="StudentClassIDColumn" msprop:Generator_UserColumnName="StudentClassID" type="xs:int" />
              <xs:element name="StudentAccountID" msprop:Generator_ColumnVarNameInTable="columnStudentAccountID" msprop:Generator_ColumnPropNameInRow="StudentAccountID" msprop:Generator_ColumnPropNameInTable="StudentAccountIDColumn" msprop:Generator_UserColumnName="StudentAccountID" type="xs:int" />
              <xs:element name="StudentName" msprop:Generator_ColumnVarNameInTable="columnStudentName" msprop:Generator_ColumnPropNameInRow="StudentName" msprop:Generator_ColumnPropNameInTable="StudentNameColumn" msprop:Generator_UserColumnName="StudentName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="StudentPhoneNumber" msprop:Generator_ColumnVarNameInTable="columnStudentPhoneNumber" msprop:Generator_ColumnPropNameInRow="StudentPhoneNumber" msprop:Generator_ColumnPropNameInTable="StudentPhoneNumberColumn" msprop:Generator_UserColumnName="StudentPhoneNumber" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="12" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="StudentMail" msprop:Generator_ColumnVarNameInTable="columnStudentMail" msprop:Generator_ColumnPropNameInRow="StudentMail" msprop:Generator_ColumnPropNameInTable="StudentMailColumn" msprop:Generator_UserColumnName="StudentMail" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Teacher" msprop:Generator_TableClassName="TeacherDataTable" msprop:Generator_TableVarName="tableTeacher" msprop:Generator_TablePropName="Teacher" msprop:Generator_RowDeletingName="TeacherRowDeleting" msprop:Generator_RowChangingName="TeacherRowChanging" msprop:Generator_RowEvHandlerName="TeacherRowChangeEventHandler" msprop:Generator_RowDeletedName="TeacherRowDeleted" msprop:Generator_UserTableName="Teacher" msprop:Generator_RowChangedName="TeacherRowChanged" msprop:Generator_RowEvArgName="TeacherRowChangeEvent" msprop:Generator_RowClassName="TeacherRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TeacherID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnTeacherID" msprop:Generator_ColumnPropNameInRow="TeacherID" msprop:Generator_ColumnPropNameInTable="TeacherIDColumn" msprop:Generator_UserColumnName="TeacherID" type="xs:int" />
              <xs:element name="TeacherAccountID" msprop:Generator_ColumnVarNameInTable="columnTeacherAccountID" msprop:Generator_ColumnPropNameInRow="TeacherAccountID" msprop:Generator_ColumnPropNameInTable="TeacherAccountIDColumn" msprop:Generator_UserColumnName="TeacherAccountID" type="xs:int" />
              <xs:element name="TeacherName" msprop:Generator_ColumnVarNameInTable="columnTeacherName" msprop:Generator_ColumnPropNameInRow="TeacherName" msprop:Generator_ColumnPropNameInTable="TeacherNameColumn" msprop:Generator_UserColumnName="TeacherName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TeacherPhoneNumber" msprop:Generator_ColumnVarNameInTable="columnTeacherPhoneNumber" msprop:Generator_ColumnPropNameInRow="TeacherPhoneNumber" msprop:Generator_ColumnPropNameInTable="TeacherPhoneNumberColumn" msprop:Generator_UserColumnName="TeacherPhoneNumber" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="12" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TeacherMail" msprop:Generator_ColumnVarNameInTable="columnTeacherMail" msprop:Generator_ColumnPropNameInRow="TeacherMail" msprop:Generator_ColumnPropNameInTable="TeacherMailColumn" msprop:Generator_UserColumnName="TeacherMail" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Teaching" msprop:Generator_TableClassName="TeachingDataTable" msprop:Generator_TableVarName="tableTeaching" msprop:Generator_TablePropName="Teaching" msprop:Generator_RowDeletingName="TeachingRowDeleting" msprop:Generator_RowChangingName="TeachingRowChanging" msprop:Generator_RowEvHandlerName="TeachingRowChangeEventHandler" msprop:Generator_RowDeletedName="TeachingRowDeleted" msprop:Generator_UserTableName="Teaching" msprop:Generator_RowChangedName="TeachingRowChanged" msprop:Generator_RowEvArgName="TeachingRowChangeEvent" msprop:Generator_RowClassName="TeachingRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TeachingTeacherID" msprop:Generator_ColumnVarNameInTable="columnTeachingTeacherID" msprop:Generator_ColumnPropNameInRow="TeachingTeacherID" msprop:Generator_ColumnPropNameInTable="TeachingTeacherIDColumn" msprop:Generator_UserColumnName="TeachingTeacherID" type="xs:int" />
              <xs:element name="TeachingCourseID" msprop:Generator_ColumnVarNameInTable="columnTeachingCourseID" msprop:Generator_ColumnPropNameInRow="TeachingCourseID" msprop:Generator_ColumnPropNameInTable="TeachingCourseIDColumn" msprop:Generator_UserColumnName="TeachingCourseID" type="xs:int" />
              <xs:element name="TeachingClassID" msprop:Generator_ColumnVarNameInTable="columnTeachingClassID" msprop:Generator_ColumnPropNameInRow="TeachingClassID" msprop:Generator_ColumnPropNameInTable="TeachingClassIDColumn" msprop:Generator_UserColumnName="TeachingClassID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CourseGradeReport" msprop:Generator_TableClassName="CourseGradeReportDataTable" msprop:Generator_TableVarName="tableCourseGradeReport" msprop:Generator_TablePropName="CourseGradeReport" msprop:Generator_RowDeletingName="CourseGradeReportRowDeleting" msprop:Generator_RowChangingName="CourseGradeReportRowChanging" msprop:Generator_RowEvHandlerName="CourseGradeReportRowChangeEventHandler" msprop:Generator_RowDeletedName="CourseGradeReportRowDeleted" msprop:Generator_UserTableName="CourseGradeReport" msprop:Generator_RowChangedName="CourseGradeReportRowChanged" msprop:Generator_RowEvArgName="CourseGradeReportRowChangeEvent" msprop:Generator_RowClassName="CourseGradeReportRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GradeStudentID" msprop:Generator_ColumnVarNameInTable="columnGradeStudentID" msprop:Generator_ColumnPropNameInRow="GradeStudentID" msprop:Generator_ColumnPropNameInTable="GradeStudentIDColumn" msprop:Generator_UserColumnName="GradeStudentID" type="xs:int" />
              <xs:element name="CourseName" msprop:Generator_ColumnVarNameInTable="columnCourseName" msprop:Generator_ColumnPropNameInRow="CourseName" msprop:Generator_ColumnPropNameInTable="CourseNameColumn" msprop:Generator_UserColumnName="CourseName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AttendanceGrade" msprop:Generator_ColumnVarNameInTable="columnAttendanceGrade" msprop:Generator_ColumnPropNameInRow="AttendanceGrade" msprop:Generator_ColumnPropNameInTable="AttendanceGradeColumn" msprop:Generator_UserColumnName="AttendanceGrade" type="xs:int" minOccurs="0" />
              <xs:element name="ProjectGrade" msprop:Generator_ColumnVarNameInTable="columnProjectGrade" msprop:Generator_ColumnPropNameInRow="ProjectGrade" msprop:Generator_ColumnPropNameInTable="ProjectGradeColumn" msprop:Generator_UserColumnName="ProjectGrade" type="xs:int" minOccurs="0" />
              <xs:element name="WrittenGrade" msprop:Generator_ColumnVarNameInTable="columnWrittenGrade" msprop:Generator_ColumnPropNameInRow="WrittenGrade" msprop:Generator_ColumnPropNameInTable="WrittenGradeColumn" msprop:Generator_UserColumnName="WrittenGrade" type="xs:int" minOccurs="0" />
              <xs:element name="PracticalExamGrade" msprop:Generator_ColumnVarNameInTable="columnPracticalExamGrade" msprop:Generator_ColumnPropNameInRow="PracticalExamGrade" msprop:Generator_ColumnPropNameInTable="PracticalExamGradeColumn" msprop:Generator_UserColumnName="PracticalExamGrade" type="xs:int" minOccurs="0" />
              <xs:element name="FinalExamGrade" msprop:Generator_ColumnVarNameInTable="columnFinalExamGrade" msprop:Generator_ColumnPropNameInRow="FinalExamGrade" msprop:Generator_ColumnPropNameInTable="FinalExamGradeColumn" msprop:Generator_UserColumnName="FinalExamGrade" type="xs:int" minOccurs="0" />
              <xs:element name="AverageGrade" msprop:Generator_ColumnVarNameInTable="columnAverageGrade" msprop:Generator_ColumnPropNameInRow="AverageGrade" msprop:Generator_ColumnPropNameInTable="AverageGradeColumn" msprop:Generator_UserColumnName="AverageGrade" type="xs:int" minOccurs="0" />
              <xs:element name="ResultText" msprop:Generator_ColumnVarNameInTable="columnResultText" msprop:Generator_ColumnPropNameInRow="ResultText" msprop:Generator_ColumnPropNameInTable="ResultTextColumn" msprop:Generator_UserColumnName="ResultText" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Account" />
      <xs:field xpath="mstns:AccountID" />
    </xs:unique>
    <xs:unique name="Class_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Class" />
      <xs:field xpath="mstns:ClassID" />
    </xs:unique>
    <xs:unique name="Course_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Course" />
      <xs:field xpath="mstns:CourseID" />
    </xs:unique>
    <xs:unique name="Grade_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Grade" />
      <xs:field xpath="mstns:GradeStudentID" />
      <xs:field xpath="mstns:GradeCourseID" />
    </xs:unique>
    <xs:unique name="Student_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Student" />
      <xs:field xpath="mstns:StudentID" />
    </xs:unique>
    <xs:unique name="Teacher_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Teacher" />
      <xs:field xpath="mstns:TeacherID" />
    </xs:unique>
    <xs:unique name="Teaching_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Teaching" />
      <xs:field xpath="mstns:TeachingTeacherID" />
      <xs:field xpath="mstns:TeachingCourseID" />
      <xs:field xpath="mstns:TeachingClassID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="fk_GradeCourseID" msdata:parent="Course" msdata:child="Grade" msdata:parentkey="CourseID" msdata:childkey="GradeCourseID" msprop:Generator_UserChildTable="Grade" msprop:Generator_ChildPropName="GetGradeRows" msprop:Generator_UserRelationName="fk_GradeCourseID" msprop:Generator_ParentPropName="CourseRow" msprop:Generator_RelationVarName="relationfk_GradeCourseID" msprop:Generator_UserParentTable="Course" />
      <msdata:Relationship name="fk_GradeStudentID" msdata:parent="Student" msdata:child="Grade" msdata:parentkey="StudentID" msdata:childkey="GradeStudentID" msprop:Generator_UserChildTable="Grade" msprop:Generator_ChildPropName="GetGradeRows" msprop:Generator_UserRelationName="fk_GradeStudentID" msprop:Generator_RelationVarName="relationfk_GradeStudentID" msprop:Generator_UserParentTable="Student" msprop:Generator_ParentPropName="StudentRow" />
      <msdata:Relationship name="fk_StudentAccountID" msdata:parent="Account" msdata:child="Student" msdata:parentkey="AccountID" msdata:childkey="StudentAccountID" msprop:Generator_UserChildTable="Student" msprop:Generator_ChildPropName="GetStudentRows" msprop:Generator_UserRelationName="fk_StudentAccountID" msprop:Generator_ParentPropName="AccountRow" msprop:Generator_RelationVarName="relationfk_StudentAccountID" msprop:Generator_UserParentTable="Account" />
      <msdata:Relationship name="fk_StudentClassID" msdata:parent="Class" msdata:child="Student" msdata:parentkey="ClassID" msdata:childkey="StudentClassID" msprop:Generator_UserChildTable="Student" msprop:Generator_ChildPropName="GetStudentRows" msprop:Generator_UserRelationName="fk_StudentClassID" msprop:Generator_ParentPropName="ClassRow" msprop:Generator_RelationVarName="relationfk_StudentClassID" msprop:Generator_UserParentTable="Class" />
      <msdata:Relationship name="fk_TeacherAccountID" msdata:parent="Account" msdata:child="Teacher" msdata:parentkey="AccountID" msdata:childkey="TeacherAccountID" msprop:Generator_UserChildTable="Teacher" msprop:Generator_ChildPropName="GetTeacherRows" msprop:Generator_UserRelationName="fk_TeacherAccountID" msprop:Generator_ParentPropName="AccountRow" msprop:Generator_RelationVarName="relationfk_TeacherAccountID" msprop:Generator_UserParentTable="Account" />
      <msdata:Relationship name="fk_TeachingClassID" msdata:parent="Class" msdata:child="Teaching" msdata:parentkey="ClassID" msdata:childkey="TeachingClassID" msprop:Generator_UserChildTable="Teaching" msprop:Generator_ChildPropName="GetTeachingRows" msprop:Generator_UserRelationName="fk_TeachingClassID" msprop:Generator_ParentPropName="ClassRow" msprop:Generator_RelationVarName="relationfk_TeachingClassID" msprop:Generator_UserParentTable="Class" />
      <msdata:Relationship name="fk_TeachingCourseID" msdata:parent="Course" msdata:child="Teaching" msdata:parentkey="CourseID" msdata:childkey="TeachingCourseID" msprop:Generator_UserChildTable="Teaching" msprop:Generator_ChildPropName="GetTeachingRows" msprop:Generator_UserRelationName="fk_TeachingCourseID" msprop:Generator_ParentPropName="CourseRow" msprop:Generator_RelationVarName="relationfk_TeachingCourseID" msprop:Generator_UserParentTable="Course" />
      <msdata:Relationship name="fk_TeachingTeacherID" msdata:parent="Teacher" msdata:child="Teaching" msdata:parentkey="TeacherID" msdata:childkey="TeachingTeacherID" msprop:Generator_UserChildTable="Teaching" msprop:Generator_ChildPropName="GetTeachingRows" msprop:Generator_UserRelationName="fk_TeachingTeacherID" msprop:Generator_ParentPropName="TeacherRow" msprop:Generator_RelationVarName="relationfk_TeachingTeacherID" msprop:Generator_UserParentTable="Teacher" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>